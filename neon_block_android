#!/bin/bash

basedir=`dirname $0`
cd $basedir
. ../setup-env.sh
declare -i result=0
set -x

INCLUDES="-I $HALIDE_ROOT/include -I $HALIDE_ROOT/support"
HL_LIBS="$HALIDE_ROOT/lib/libHalide.a"

#############################################################################
cat <<EOT
=== Build Android ARM-64/Hexagon executable for device ===
EOT

rm -fr ./binneon
mkdir -p binneon/arm-64-android

# ${CXX} -std=c++11 $INCLUDES  -g -fno-rtti halide_blur_generator.cpp $HALIDE_ROOT/tools/GenGen.cpp -g $HL_LIBS -o binneon/halide_blur.generator -ldl -lpthread -lz
# export LD_LIBRARY_PATH=$HALIDE_ROOT/lib/host:${HL_HEXAGON_TOOLS_SIM}/lib/iss/:.
# set -x
# binneon/halide_blur.generator -g halide_blur -o ./binneon/arm-64-android target=arm-64-android
# $ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android-c++ -std=c++11 -fopenmp $INCLUDES -I ./binneon/arm-64-android -Wall -O3 neonblock.cpp  binneon/arm-64-android/halide_blur.a -o binneon/arm-64-android/test -llog -fPIE -pie
$ANDROID_ARM64_TOOLCHAIN/bin/aarch64-linux-android-c++ -std=c++11 -fopenmp -DMALLOC_TEST $INCLUDES -I ./binneon/arm-64-android -Wall -O3 neonblock.cpp   -o binneon/arm-64-android/test -llog -fPIE -pie
if [ "z$RUNDROID" = "z" ]; then
    set +x
    export PREF=echo
    export STR="To run this example on an Android device, do:"
else
    echo "Running tests on Device:$ANDROID_SERIAL"
    set +x
fi
$PREF $STR
$PREF    adb push bin/arm-64-android/test /data/
$PREF    adb shell chmod +x /data/test
$PREF    adb shell /data/test 10
$PREF



result=$?

exit $result
